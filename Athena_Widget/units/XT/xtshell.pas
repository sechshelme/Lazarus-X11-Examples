unit XtShell;

interface

uses
  x, xlib,
  XTIntrinsic;

const
  libXt = 'libXt.so';

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}

//{$include <X11/SM/SMlib.h>}
//{$include <X11/Intrinsic.h>}
{**********************************************************************
 *
 * Shell Widget
 *
 ********************************************************************** }
{
 * Shell-specific resources names, classes, and a representation type.
  }
{ $Xorg: makestrs.c,v 1.6 2001/02/09 02:03:17 xorgcvs Exp $  }
{ This file is automatically generated.  }
{ Default ABI version -- Do not edit  }

const
  XtNiconName = 'iconName';  
  XtCIconName = 'IconName';  
  XtNiconPixmap = 'iconPixmap';  
  XtCIconPixmap = 'IconPixmap';  
  XtNiconWindow = 'iconWindow';  
  XtCIconWindow = 'IconWindow';  
  XtNiconMask = 'iconMask';  
  XtCIconMask = 'IconMask';  
  XtNwindowGroup = 'windowGroup';  
  XtCWindowGroup = 'WindowGroup';  
  XtNvisual = 'visual';  
  XtCVisual = 'Visual';  
  XtNtitleEncoding = 'titleEncoding';  
  XtCTitleEncoding = 'TitleEncoding';  
  XtNsaveUnder = 'saveUnder';  
  XtCSaveUnder = 'SaveUnder';  
  XtNtransient = 'transient';  
  XtCTransient = 'Transient';  
  XtNoverrideRedirect = 'overrideRedirect';  
  XtCOverrideRedirect = 'OverrideRedirect';  
  XtNtransientFor = 'transientFor';  
  XtCTransientFor = 'TransientFor';  
  XtNiconNameEncoding = 'iconNameEncoding';  
  XtCIconNameEncoding = 'IconNameEncoding';  
  XtNallowShellResize = 'allowShellResize';  
  XtCAllowShellResize = 'AllowShellResize';  
  XtNcreatePopupChildProc = 'createPopupChildProc';  
  XtCCreatePopupChildProc = 'CreatePopupChildProc';  
  XtNtitle = 'title';  
  XtCTitle = 'Title';  

const
  XtRAtom = 'Atom';  

const
  XtNargc = 'argc';  
  XtCArgc = 'Argc';  
  XtNargv = 'argv';  
  XtCArgv = 'Argv';  
  XtNiconX = 'iconX';  
  XtCIconX = 'IconX';  
  XtNiconY = 'iconY';  
  XtCIconY = 'IconY';  
  XtNinput = 'input';  
  XtCInput = 'Input';  
  XtNiconic = 'iconic';  
  XtCIconic = 'Iconic';  
  XtNinitialState = 'initialState';  
  XtCInitialState = 'InitialState';  
  XtNgeometry = 'geometry';  
  XtCGeometry = 'Geometry';  
  XtNbaseWidth = 'baseWidth';  
  XtCBaseWidth = 'BaseWidth';  
  XtNbaseHeight = 'baseHeight';  
  XtCBaseHeight = 'BaseHeight';  
  XtNwinGravity = 'winGravity';  
  XtCWinGravity = 'WinGravity';  
  XtNminWidth = 'minWidth';  
  XtCMinWidth = 'MinWidth';  
  XtNminHeight = 'minHeight';  
  XtCMinHeight = 'MinHeight';  
  XtNmaxWidth = 'maxWidth';  
  XtCMaxWidth = 'MaxWidth';  
  XtNmaxHeight = 'maxHeight';  
  XtCMaxHeight = 'MaxHeight';  
  XtNwidthInc = 'widthInc';  
  XtCWidthInc = 'WidthInc';  
  XtNheightInc = 'heightInc';  
  XtCHeightInc = 'HeightInc';  
  XtNminAspectY = 'minAspectY';  
  XtCMinAspectY = 'MinAspectY';  
  XtNmaxAspectY = 'maxAspectY';  
  XtCMaxAspectY = 'MaxAspectY';  
  XtNminAspectX = 'minAspectX';  
  XtCMinAspectX = 'MinAspectX';  
  XtNmaxAspectX = 'maxAspectX';  
  XtCMaxAspectX = 'MaxAspectX';  
  XtNwmTimeout = 'wmTimeout';  
  XtCWmTimeout = 'WmTimeout';  
  XtNwaitForWm = 'waitforwm';  
  XtCWaitForWm = 'Waitforwm';  
//  XtNwaitforwm = 'waitforwm';  
//  XtCWaitforwm = 'Waitforwm';  
  XtNclientLeader = 'clientLeader';  
  XtCClientLeader = 'ClientLeader';  
  XtNwindowRole = 'windowRole';  
  XtCWindowRole = 'WindowRole';  
  XtNurgency = 'urgency';  
  XtCUrgency = 'Urgency';  
  XtNcancelCallback = 'cancelCallback';  
  XtNcloneCommand = 'cloneCommand';  
  XtCCloneCommand = 'CloneCommand';  
  XtNconnection = 'connection';  
  XtCConnection = 'Connection';  
  XtNcurrentDirectory = 'currentDirectory';  
  XtCCurrentDirectory = 'CurrentDirectory';  
  XtNdieCallback = 'dieCallback';  
  XtNdiscardCommand = 'discardCommand';  
  XtCDiscardCommand = 'DiscardCommand';  
  XtNenvironment = 'environment';  
  XtCEnvironment = 'Environment';  
  XtNinteractCallback = 'interactCallback';  
  XtNjoinSession = 'joinSession';  
  XtCJoinSession = 'JoinSession';  
  XtNprogramPath = 'programPath';  
  XtCProgramPath = 'ProgramPath';  
  XtNresignCommand = 'resignCommand';  
  XtCResignCommand = 'ResignCommand';  
  XtNrestartCommand = 'restartCommand';  
  XtCRestartCommand = 'RestartCommand';  
  XtNrestartStyle = 'restartStyle';  
  XtCRestartStyle = 'RestartStyle';  
  XtNsaveCallback = 'saveCallback';  
  XtNsaveCompleteCallback = 'saveCompleteCallback';  
  XtNsessionID = 'sessionID';  
  XtCSessionID = 'SessionID';  
  XtNshutdownCommand = 'shutdownCommand';  
  XtCShutdownCommand = 'ShutdownCommand';  
  XtNerrorCallback = 'errorCallback';  

var
    XtShellStrings : Pchar;cvar;external libXt;

//type
//  PShellWidgetClass = ^TShellWidgetClass;
//  TShellWidgetClass = PShellClassRec;
//
//  POverrideShellWidgetClass = ^TOverrideShellWidgetClass;
//  TOverrideShellWidgetClass = POverrideShellClassRec;
//
//  PWMShellWidgetClass = ^TWMShellWidgetClass;
//  TWMShellWidgetClass = PWMShellClassRec;
//
//  PTransientShellWidgetClass = ^TTransientShellWidgetClass;
//  TTransientShellWidgetClass = PTransientShellClassRec;
//
//  PTopLevelShellWidgetClass = ^TTopLevelShellWidgetClass;
//  TTopLevelShellWidgetClass = PTopLevelShellClassRec;
//
//  PApplicationShellWidgetClass = ^TApplicationShellWidgetClass;
//  TApplicationShellWidgetClass = PApplicationShellClassRec;
//
//  PSessionShellWidgetClass = ^TSessionShellWidgetClass;
//  TSessionShellWidgetClass = PSessionShellClassRec;

var
    shellWidgetClass : TWidgetClass;cvar;external libXt;
    overrideShellWidgetClass : TWidgetClass;cvar;external libXt;
    wmShellWidgetClass : TWidgetClass;cvar;external libXt;
    transientShellWidgetClass : TWidgetClass;cvar;external libXt;
    topLevelShellWidgetClass : TWidgetClass;cvar;external libXt;
    applicationShellWidgetClass : TWidgetClass;cvar;external libXt;
    sessionShellWidgetClass : TWidgetClass;cvar;external libXt;

implementation

end.
