
unit StringDefs;
interface

{
  Automatically converted by H2Pas 1.0.0 from StringDefs.h
  The following command line parameters were used:
    StringDefs.h
}

{$IFDEF FPC}
{$PACKRECORDS C}
{$ENDIF}


  {**********************************************************
  
  Copyright 1987, 1988, 1994, 1998  The Open Group
  
  Permission to use, copy, modify, distribute, and sell this software and its
  documentation for any purpose is hereby granted without fee, provided that
  the above copyright notice appear in all copies and that both that
  copyright notice and this permission notice appear in supporting
  documentation.
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
  OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
  AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  
  Except as contained in this notice, the name of The Open Group shall not be
  used in advertising or otherwise to promote the sale, use or other dealings
  in this Software without prior written authorization from The Open Group.
  
  
  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts.
  
                          All Rights Reserved
  
  Permission to use, copy, modify, and distribute this software and its
  documentation for any purpose and without fee is hereby granted,
  provided that the above copyright notice appear in all copies and that
  both that copyright notice and this permission notice appear in
  supporting documentation, and that the name of Digital not be
  used in advertising or publicity pertaining to distribution of the
  software without specific, written prior permission.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
  DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
  ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
  ***************************************************************** }
{$ifndef _XtStringDefs_h_}
{$define _XtStringDefs_h_}  
{$ifndef XTSTRINGDEFINES}
(* error 
#define _XtStringDefs_h_Const const
in define line 52 *)
{$endif}
    { $Xorg: makestrs.c,v 1.6 2001/02/09 02:03:17 xorgcvs Exp $  }
    { This file is automatically generated.  }
    { Default ABI version -- Do not edit  }
{$ifdef XTSTRINGDEFINES}

    const
      XtNaccelerators = 'accelerators';      
      XtNallowHoriz = 'allowHoriz';      
      XtNallowVert = 'allowVert';      
      XtNancestorSensitive = 'ancestorSensitive';      
      XtNbackground = 'background';      
      XtNbackgroundPixmap = 'backgroundPixmap';      
      XtNbitmap = 'bitmap';      
      XtNborderColor = 'borderColor';      
      XtNborder = 'borderColor';      
      XtNborderPixmap = 'borderPixmap';      
      XtNborderWidth = 'borderWidth';      
      XtNcallback = 'callback';      
      XtNchildren = 'children';      
      XtNcolormap = 'colormap';      
      XtNdepth = 'depth';      
      XtNdestroyCallback = 'destroyCallback';      
      XtNeditType = 'editType';      
      XtNfile = 'file';      
      XtNfont = 'font';      
      XtNforceBars = 'forceBars';      
      XtNforeground = 'foreground';      
      XtNfunction = 'function';      
      XtNheight = 'height';      
      XtNhighlight = 'highlight';      
      XtNhSpace = 'hSpace';      
      XtNindex = 'index';      
      XtNinitialResourcesPersistent = 'initialResourcesPersistent';      
      XtNinnerHeight = 'innerHeight';      
      XtNinnerWidth = 'innerWidth';      
      XtNinnerWindow = 'innerWindow';      
      XtNinsertPosition = 'insertPosition';      
      XtNinternalHeight = 'internalHeight';      
      XtNinternalWidth = 'internalWidth';      
      XtNjumpProc = 'jumpProc';      
      XtNjustify = 'justify';      
      XtNknobHeight = 'knobHeight';      
      XtNknobIndent = 'knobIndent';      
      XtNknobPixel = 'knobPixel';      
      XtNknobWidth = 'knobWidth';      
      XtNlabel = 'label';      
      XtNlength = 'length';      
      XtNlowerRight = 'lowerRight';      
      XtNmappedWhenManaged = 'mappedWhenManaged';      
      XtNmenuEntry = 'menuEntry';      
      XtNname = 'name';      
      XtNnotify = 'notify';      
      XtNnumChildren = 'numChildren';      
      XtNorientation = 'orientation';      
      XtNparameter = 'parameter';      
      XtNpixmap = 'pixmap';      
      XtNpopupCallback = 'popupCallback';      
      XtNpopdownCallback = 'popdownCallback';      
      XtNresize = 'resize';      
      XtNreverseVideo = 'reverseVideo';      
      XtNscreen = 'screen';      
      XtNscrollProc = 'scrollProc';      
      XtNscrollDCursor = 'scrollDCursor';      
      XtNscrollHCursor = 'scrollHCursor';      
      XtNscrollLCursor = 'scrollLCursor';      
      XtNscrollRCursor = 'scrollRCursor';      
      XtNscrollUCursor = 'scrollUCursor';      
      XtNscrollVCursor = 'scrollVCursor';      
      XtNselection = 'selection';      
      XtNselectionArray = 'selectionArray';      
      XtNsensitive = 'sensitive';      
      XtNshown = 'shown';      
      XtNspace = 'space';      
      XtNstring = 'string';      
      XtNtextOptions = 'textOptions';      
      XtNtextSink = 'textSink';      
      XtNtextSource = 'textSource';      
      XtNthickness = 'thickness';      
      XtNthumb = 'thumb';      
      XtNthumbProc = 'thumbProc';      
      XtNtop = 'top';      
      XtNtranslations = 'translations';      
      XtNunrealizeCallback = 'unrealizeCallback';      
      XtNupdate = 'update';      
      XtNuseBottom = 'useBottom';      
      XtNuseRight = 'useRight';      
      XtNvalue = 'value';      
      XtNvSpace = 'vSpace';      
      XtNwidth = 'width';      
      XtNwindow = 'window';      
      XtNx = 'x';      
      XtNy = 'y';      
      XtCAccelerators = 'Accelerators';      
      XtCBackground = 'Background';      
      XtCBitmap = 'Bitmap';      
      XtCBoolean = 'Boolean';      
      XtCBorderColor = 'BorderColor';      
      XtCBorderWidth = 'BorderWidth';      
      XtCCallback = 'Callback';      
      XtCColormap = 'Colormap';      
      XtCColor = 'Color';      
      XtCCursor = 'Cursor';      
      XtCDepth = 'Depth';      
      XtCEditType = 'EditType';      
      XtCEventBindings = 'EventBindings';      
      XtCFile = 'File';      
      XtCFont = 'Font';      
      XtCForeground = 'Foreground';      
      XtCFraction = 'Fraction';      
      XtCFunction = 'Function';      
      XtCHeight = 'Height';      
      XtCHSpace = 'HSpace';      
      XtCIndex = 'Index';      
      XtCInitialResourcesPersistent = 'InitialResourcesPersistent';      
      XtCInsertPosition = 'InsertPosition';      
      XtCInterval = 'Interval';      
      XtCJustify = 'Justify';      
      XtCKnobIndent = 'KnobIndent';      
      XtCKnobPixel = 'KnobPixel';      
      XtCLabel = 'Label';      
      XtCLength = 'Length';      
      XtCMappedWhenManaged = 'MappedWhenManaged';      
      XtCMargin = 'Margin';      
      XtCMenuEntry = 'MenuEntry';      
      XtCNotify = 'Notify';      
      XtCOrientation = 'Orientation';      
      XtCParameter = 'Parameter';      
      XtCPixmap = 'Pixmap';      
      XtCPosition = 'Position';      
      XtCReadOnly = 'ReadOnly';      
      XtCResize = 'Resize';      
      XtCReverseVideo = 'ReverseVideo';      
      XtCScreen = 'Screen';      
      XtCScrollProc = 'ScrollProc';      
      XtCScrollDCursor = 'ScrollDCursor';      
      XtCScrollHCursor = 'ScrollHCursor';      
      XtCScrollLCursor = 'ScrollLCursor';      
      XtCScrollRCursor = 'ScrollRCursor';      
      XtCScrollUCursor = 'ScrollUCursor';      
      XtCScrollVCursor = 'ScrollVCursor';      
      XtCSelection = 'Selection';      
      XtCSensitive = 'Sensitive';      
      XtCSelectionArray = 'SelectionArray';      
      XtCSpace = 'Space';      
      XtCString = 'String';      
      XtCTextOptions = 'TextOptions';      
      XtCTextPosition = 'TextPosition';      
      XtCTextSink = 'TextSink';      
      XtCTextSource = 'TextSource';      
      XtCThickness = 'Thickness';      
      XtCThumb = 'Thumb';      
      XtCTranslations = 'Translations';      
      XtCValue = 'Value';      
      XtCVSpace = 'VSpace';      
      XtCWidth = 'Width';      
      XtCWindow = 'Window';      
      XtCX = 'X';      
      XtCY = 'Y';      
      XtRAcceleratorTable = 'AcceleratorTable';      
{$ifndef XtRAtom}

    const
      XtRAtom = 'Atom';      
{$endif}

    const
      XtRBitmap = 'Bitmap';      
      XtRBool = 'Bool';      
      XtRBoolean = 'Boolean';      
      XtRCallback = 'Callback';      
      XtRCallProc = 'CallProc';      
      XtRCardinal = 'Cardinal';      
      XtRColor = 'Color';      
      XtRColormap = 'Colormap';      
      XtRCursor = 'Cursor';      
      XtRDimension = 'Dimension';      
      XtRDisplay = 'Display';      
      XtREditMode = 'EditMode';      
      XtREnum = 'Enum';      
      XtRFile = 'File';      
      XtRFloat = 'Float';      
      XtRFont = 'Font';      
      XtRFontStruct = 'FontStruct';      
      XtRFunction = 'Function';      
      XtRGeometry = 'Geometry';      
      XtRImmediate = 'Immediate';      
      XtRInitialState = 'InitialState';      
      XtRInt = 'Int';      
      XtRJustify = 'Justify';      
      XtRLongBoolean = 'Bool';      
      XtRObject = 'Object';      
      XtROrientation = 'Orientation';      
      XtRPixel = 'Pixel';      
      XtRPixmap = 'Pixmap';      
      XtRPointer = 'Pointer';      
      XtRPosition = 'Position';      
      XtRScreen = 'Screen';      
      XtRShort = 'Short';      
      XtRString = 'String';      
      XtRStringArray = 'StringArray';      
      XtRStringTable = 'StringTable';      
      XtRUnsignedChar = 'UnsignedChar';      
      XtRTranslationTable = 'TranslationTable';      
      XtRVisual = 'Visual';      
      XtRWidget = 'Widget';      
      XtRWidgetClass = 'WidgetClass';      
      XtRWidgetList = 'WidgetList';      
      XtRWindow = 'Window';      
      XtEoff = 'off';      
      XtEfalse = 'false';      
      XtEno = 'no';      
      XtEon = 'on';      
      XtEtrue = 'true';      
      XtEyes = 'yes';      
      XtEvertical = 'vertical';      
      XtEhorizontal = 'horizontal';      
      XtEtextRead = 'read';      
      XtEtextAppend = 'append';      
      XtEtextEdit = 'edit';      
      XtExtdefaultbackground = 'xtdefaultbackground';      
      XtExtdefaultforeground = 'xtdefaultforeground';      
      XtExtdefaultfont = 'xtdefaultfont';      
      XtNfontSet = 'fontSet';      
      XtRFontSet = 'FontSet';      
      XtCFontSet = 'FontSet';      
      XtRGravity = 'Gravity';      
      XtNcreateHook = 'createHook';      
      XtNchangeHook = 'changeHook';      
      XtNconfigureHook = 'configureHook';      
      XtNgeometryHook = 'geometryHook';      
      XtNdestroyHook = 'destroyHook';      
      XtNshells = 'shells';      
      XtNnumShells = 'numShells';      
      XtRCommandArgArray = 'CommandArgArray';      
      XtRDirectoryString = 'DirectoryString';      
      XtREnvironmentArray = 'EnvironmentArray';      
      XtRRestartStyle = 'RestartStyle';      
      XtRSmcConn = 'SmcConn';      
      XtHcreate = 'Xtcreate';      
      XtHsetValues = 'XtsetValues';      
      XtHmanageChildren = 'XtmanageChildren';      
      XtHunmanageChildren = 'XtunmanageChildren';      
      XtHmanageSet = 'XtmanageSet';      
      XtHunmanageSet = 'XtunmanageSet';      
      XtHrealizeWidget = 'XtrealizeWidget';      
      XtHunrealizeWidget = 'XtunrealizeWidget';      
      XtHaddCallback = 'XtaddCallback';      
      XtHaddCallbacks = 'XtaddCallbacks';      
      XtHremoveCallback = 'XtremoveCallback';      
      XtHremoveCallbacks = 'XtremoveCallbacks';      
      XtHremoveAllCallbacks = 'XtremoveAllCallbacks';      
      XtHaugmentTranslations = 'XtaugmentTranslations';      
      XtHoverrideTranslations = 'XtoverrideTranslations';      
      XtHuninstallTranslations = 'XtuninstallTranslations';      
      XtHsetKeyboardFocus = 'XtsetKeyboardFocus';      
      XtHsetWMColormapWindows = 'XtsetWMColormapWindows';      
      XtHsetMappedWhenManaged = 'XtsetMappedWhenManaged';      
      XtHmapWidget = 'XtmapWidget';      
      XtHunmapWidget = 'XtunmapWidget';      
      XtHpopup = 'Xtpopup';      
      XtHpopupSpringLoaded = 'XtpopupSpringLoaded';      
      XtHpopdown = 'Xtpopdown';      
      XtHconfigure = 'Xtconfigure';      
      XtHpreGeometry = 'XtpreGeometry';      
      XtHpostGeometry = 'XtpostGeometry';      
      XtHdestroy = 'Xtdestroy';      
{$else}
(* error 
extern _XtStringDefs_h_Const char XtStrings[];
in declaration at line 316 *)
{$ifndef XtNaccelerators}

    { was #define dname def_expr }
    function XtNaccelerators : String;      

{$endif}
{$ifndef XtNallowHoriz}

    { was #define dname def_expr }
    function XtNallowHoriz : String;      

{$endif}
{$ifndef XtNallowVert}

    { was #define dname def_expr }
    function XtNallowVert : String;      

{$endif}
{$ifndef XtNancestorSensitive}

    { was #define dname def_expr }
    function XtNancestorSensitive : String;      

{$endif}
{$ifndef XtNbackground}

    { was #define dname def_expr }
    function XtNbackground : String;      

{$endif}
{$ifndef XtNbackgroundPixmap}

    { was #define dname def_expr }
    function XtNbackgroundPixmap : String;      

{$endif}
{$ifndef XtNbitmap}

    { was #define dname def_expr }
    function XtNbitmap : String;      

{$endif}
{$ifndef XtNborderColor}

    { was #define dname def_expr }
    function XtNborderColor : String;      

{$endif}
{$ifndef XtNborder}

    { was #define dname def_expr }
    function XtNborder : String;      

{$endif}
{$ifndef XtNborderPixmap}

    { was #define dname def_expr }
    function XtNborderPixmap : String;      

{$endif}
{$ifndef XtNborderWidth}

    { was #define dname def_expr }
    function XtNborderWidth : String;      

{$endif}
{$ifndef XtNcallback}

    { was #define dname def_expr }
    function XtNcallback : String;      

{$endif}
{$ifndef XtNchildren}

    { was #define dname def_expr }
    function XtNchildren : String;      

{$endif}
{$ifndef XtNcolormap}

    { was #define dname def_expr }
    function XtNcolormap : String;      

{$endif}
{$ifndef XtNdepth}

    { was #define dname def_expr }
    function XtNdepth : String;      

{$endif}
{$ifndef XtNdestroyCallback}

    { was #define dname def_expr }
    function XtNdestroyCallback : String;      

{$endif}
{$ifndef XtNeditType}

    { was #define dname def_expr }
    function XtNeditType : String;      

{$endif}
{$ifndef XtNfile}

    { was #define dname def_expr }
    function XtNfile : String;      

{$endif}
{$ifndef XtNfont}

    { was #define dname def_expr }
    function XtNfont : String;      

{$endif}
{$ifndef XtNforceBars}

    { was #define dname def_expr }
    function XtNforceBars : String;      

{$endif}
{$ifndef XtNforeground}

    { was #define dname def_expr }
    function XtNforeground : String;      

{$endif}
{$ifndef XtNfunction}

    { was #define dname def_expr }
    function XtNfunction : String;      

{$endif}
{$ifndef XtNheight}

    { was #define dname def_expr }
    function XtNheight : String;      

{$endif}
{$ifndef XtNhighlight}

    { was #define dname def_expr }
    function XtNhighlight : String;      

{$endif}
{$ifndef XtNhSpace}

    { was #define dname def_expr }
    function XtNhSpace : String;      

{$endif}
{$ifndef XtNindex}

    { was #define dname def_expr }
    function XtNindex : String;      

{$endif}
{$ifndef XtNinitialResourcesPersistent}

    { was #define dname def_expr }
    function XtNinitialResourcesPersistent : String;      

{$endif}
{$ifndef XtNinnerHeight}

    { was #define dname def_expr }
    function XtNinnerHeight : String;      

{$endif}
{$ifndef XtNinnerWidth}

    { was #define dname def_expr }
    function XtNinnerWidth : String;      

{$endif}
{$ifndef XtNinnerWindow}

    { was #define dname def_expr }
    function XtNinnerWindow : String;      

{$endif}
{$ifndef XtNinsertPosition}

    { was #define dname def_expr }
    function XtNinsertPosition : String;      

{$endif}
{$ifndef XtNinternalHeight}

    { was #define dname def_expr }
    function XtNinternalHeight : String;      

{$endif}
{$ifndef XtNinternalWidth}

    { was #define dname def_expr }
    function XtNinternalWidth : String;      

{$endif}
{$ifndef XtNjumpProc}

    { was #define dname def_expr }
    function XtNjumpProc : String;      

{$endif}
{$ifndef XtNjustify}

    { was #define dname def_expr }
    function XtNjustify : String;      

{$endif}
{$ifndef XtNknobHeight}

    { was #define dname def_expr }
    function XtNknobHeight : String;      

{$endif}
{$ifndef XtNknobIndent}

    { was #define dname def_expr }
    function XtNknobIndent : String;      

{$endif}
{$ifndef XtNknobPixel}

    { was #define dname def_expr }
    function XtNknobPixel : String;      

{$endif}
{$ifndef XtNknobWidth}

    { was #define dname def_expr }
    function XtNknobWidth : String;      

{$endif}
{$ifndef XtNlabel}

    { was #define dname def_expr }
    function XtNlabel : String;      

{$endif}
{$ifndef XtNlength}

    { was #define dname def_expr }
    function XtNlength : String;      

{$endif}
{$ifndef XtNlowerRight}

    { was #define dname def_expr }
    function XtNlowerRight : String;      

{$endif}
{$ifndef XtNmappedWhenManaged}

    { was #define dname def_expr }
    function XtNmappedWhenManaged : String;      

{$endif}
{$ifndef XtNmenuEntry}

    { was #define dname def_expr }
    function XtNmenuEntry : String;      

{$endif}
{$ifndef XtNname}

    { was #define dname def_expr }
    function XtNname : String;      

{$endif}
{$ifndef XtNnotify}

    { was #define dname def_expr }
    function XtNnotify : String;      

{$endif}
{$ifndef XtNnumChildren}

    { was #define dname def_expr }
    function XtNnumChildren : String;      

{$endif}
{$ifndef XtNorientation}

    { was #define dname def_expr }
    function XtNorientation : String;      

{$endif}
{$ifndef XtNparameter}

    { was #define dname def_expr }
    function XtNparameter : String;      

{$endif}
{$ifndef XtNpixmap}

    { was #define dname def_expr }
    function XtNpixmap : String;      

{$endif}
{$ifndef XtNpopupCallback}

    { was #define dname def_expr }
    function XtNpopupCallback : String;      

{$endif}
{$ifndef XtNpopdownCallback}

    { was #define dname def_expr }
    function XtNpopdownCallback : String;      

{$endif}
{$ifndef XtNresize}

    { was #define dname def_expr }
    function XtNresize : String;      

{$endif}
{$ifndef XtNreverseVideo}

    { was #define dname def_expr }
    function XtNreverseVideo : String;      

{$endif}
{$ifndef XtNscreen}

    { was #define dname def_expr }
    function XtNscreen : String;      

{$endif}
{$ifndef XtNscrollProc}

    { was #define dname def_expr }
    function XtNscrollProc : String;      

{$endif}
{$ifndef XtNscrollDCursor}

    { was #define dname def_expr }
    function XtNscrollDCursor : String;      

{$endif}
{$ifndef XtNscrollHCursor}

    { was #define dname def_expr }
    function XtNscrollHCursor : String;      

{$endif}
{$ifndef XtNscrollLCursor}

    { was #define dname def_expr }
    function XtNscrollLCursor : String;      

{$endif}
{$ifndef XtNscrollRCursor}

    { was #define dname def_expr }
    function XtNscrollRCursor : String;      

{$endif}
{$ifndef XtNscrollUCursor}

    { was #define dname def_expr }
    function XtNscrollUCursor : String;      

{$endif}
{$ifndef XtNscrollVCursor}

    { was #define dname def_expr }
    function XtNscrollVCursor : String;      

{$endif}
{$ifndef XtNselection}

    { was #define dname def_expr }
    function XtNselection : String;      

{$endif}
{$ifndef XtNselectionArray}

    { was #define dname def_expr }
    function XtNselectionArray : String;      

{$endif}
{$ifndef XtNsensitive}

    { was #define dname def_expr }
    function XtNsensitive : String;      

{$endif}
{$ifndef XtNshown}

    { was #define dname def_expr }
    function XtNshown : String;      

{$endif}
{$ifndef XtNspace}

    { was #define dname def_expr }
    function XtNspace : String;      

{$endif}
{$ifndef XtNstring}

    { was #define dname def_expr }
    function XtNstring : String;      

{$endif}
{$ifndef XtNtextOptions}

    { was #define dname def_expr }
    function XtNtextOptions : String;      

{$endif}
{$ifndef XtNtextSink}

    { was #define dname def_expr }
    function XtNtextSink : String;      

{$endif}
{$ifndef XtNtextSource}

    { was #define dname def_expr }
    function XtNtextSource : String;      

{$endif}
{$ifndef XtNthickness}

    { was #define dname def_expr }
    function XtNthickness : String;      

{$endif}
{$ifndef XtNthumb}

    { was #define dname def_expr }
    function XtNthumb : String;      

{$endif}
{$ifndef XtNthumbProc}

    { was #define dname def_expr }
    function XtNthumbProc : String;      

{$endif}
{$ifndef XtNtop}

    { was #define dname def_expr }
    function XtNtop : String;      

{$endif}
{$ifndef XtNtranslations}

    { was #define dname def_expr }
    function XtNtranslations : String;      

{$endif}
{$ifndef XtNunrealizeCallback}

    { was #define dname def_expr }
    function XtNunrealizeCallback : String;      

{$endif}
{$ifndef XtNupdate}

    { was #define dname def_expr }
    function XtNupdate : String;      

{$endif}
{$ifndef XtNuseBottom}

    { was #define dname def_expr }
    function XtNuseBottom : String;      

{$endif}
{$ifndef XtNuseRight}

    { was #define dname def_expr }
    function XtNuseRight : String;      

{$endif}
{$ifndef XtNvalue}

    { was #define dname def_expr }
    function XtNvalue : String;      

{$endif}
{$ifndef XtNvSpace}

    { was #define dname def_expr }
    function XtNvSpace : String;      

{$endif}
{$ifndef XtNwidth}

    { was #define dname def_expr }
    function XtNwidth : String;      

{$endif}
{$ifndef XtNwindow}

    { was #define dname def_expr }
    function XtNwindow : String;      

{$endif}
{$ifndef XtNx}

    { was #define dname def_expr }
    function XtNx : String;      

{$endif}
{$ifndef XtNy}

    { was #define dname def_expr }
    function XtNy : String;      

{$endif}
{$ifndef XtCAccelerators}

    { was #define dname def_expr }
    function XtCAccelerators : String;      

{$endif}
{$ifndef XtCBackground}

    { was #define dname def_expr }
    function XtCBackground : String;      

{$endif}
{$ifndef XtCBitmap}

    { was #define dname def_expr }
    function XtCBitmap : String;      

{$endif}
{$ifndef XtCBoolean}

    { was #define dname def_expr }
    function XtCBoolean : String;      

{$endif}
{$ifndef XtCBorderColor}

    { was #define dname def_expr }
    function XtCBorderColor : String;      

{$endif}
{$ifndef XtCBorderWidth}

    { was #define dname def_expr }
    function XtCBorderWidth : String;      

{$endif}
{$ifndef XtCCallback}

    { was #define dname def_expr }
    function XtCCallback : String;      

{$endif}
{$ifndef XtCColormap}

    { was #define dname def_expr }
    function XtCColormap : String;      

{$endif}
{$ifndef XtCColor}

    { was #define dname def_expr }
    function XtCColor : String;      

{$endif}
{$ifndef XtCCursor}

    { was #define dname def_expr }
    function XtCCursor : String;      

{$endif}
{$ifndef XtCDepth}

    { was #define dname def_expr }
    function XtCDepth : String;      

{$endif}
{$ifndef XtCEditType}

    { was #define dname def_expr }
    function XtCEditType : String;      

{$endif}
{$ifndef XtCEventBindings}

    { was #define dname def_expr }
    function XtCEventBindings : String;      

{$endif}
{$ifndef XtCFile}

    { was #define dname def_expr }
    function XtCFile : String;      

{$endif}
{$ifndef XtCFont}

    { was #define dname def_expr }
    function XtCFont : String;      

{$endif}
{$ifndef XtCForeground}

    { was #define dname def_expr }
    function XtCForeground : String;      

{$endif}
{$ifndef XtCFraction}

    { was #define dname def_expr }
    function XtCFraction : String;      

{$endif}
{$ifndef XtCFunction}

    { was #define dname def_expr }
    function XtCFunction : String;      

{$endif}
{$ifndef XtCHeight}

    { was #define dname def_expr }
    function XtCHeight : String;      

{$endif}
{$ifndef XtCHSpace}

    { was #define dname def_expr }
    function XtCHSpace : String;      

{$endif}
{$ifndef XtCIndex}

    { was #define dname def_expr }
    function XtCIndex : String;      

{$endif}
{$ifndef XtCInitialResourcesPersistent}

    { was #define dname def_expr }
    function XtCInitialResourcesPersistent : String;      

{$endif}
{$ifndef XtCInsertPosition}

    { was #define dname def_expr }
    function XtCInsertPosition : String;      

{$endif}
{$ifndef XtCInterval}

    { was #define dname def_expr }
    function XtCInterval : String;      

{$endif}
{$ifndef XtCJustify}

    { was #define dname def_expr }
    function XtCJustify : String;      

{$endif}
{$ifndef XtCKnobIndent}

    { was #define dname def_expr }
    function XtCKnobIndent : String;      

{$endif}
{$ifndef XtCKnobPixel}

    { was #define dname def_expr }
    function XtCKnobPixel : String;      

{$endif}
{$ifndef XtCLabel}

    { was #define dname def_expr }
    function XtCLabel : String;      

{$endif}
{$ifndef XtCLength}

    { was #define dname def_expr }
    function XtCLength : String;      

{$endif}
{$ifndef XtCMappedWhenManaged}

    { was #define dname def_expr }
    function XtCMappedWhenManaged : String;      

{$endif}
{$ifndef XtCMargin}

    { was #define dname def_expr }
    function XtCMargin : String;      

{$endif}
{$ifndef XtCMenuEntry}

    { was #define dname def_expr }
    function XtCMenuEntry : String;      

{$endif}
{$ifndef XtCNotify}

    { was #define dname def_expr }
    function XtCNotify : String;      

{$endif}
{$ifndef XtCOrientation}

    { was #define dname def_expr }
    function XtCOrientation : String;      

{$endif}
{$ifndef XtCParameter}

    { was #define dname def_expr }
    function XtCParameter : String;      

{$endif}
{$ifndef XtCPixmap}

    { was #define dname def_expr }
    function XtCPixmap : String;      

{$endif}
{$ifndef XtCPosition}

    { was #define dname def_expr }
    function XtCPosition : String;      

{$endif}
{$ifndef XtCReadOnly}

    { was #define dname def_expr }
    function XtCReadOnly : String;      

{$endif}
{$ifndef XtCResize}

    { was #define dname def_expr }
    function XtCResize : String;      

{$endif}
{$ifndef XtCReverseVideo}

    { was #define dname def_expr }
    function XtCReverseVideo : String;      

{$endif}
{$ifndef XtCScreen}

    { was #define dname def_expr }
    function XtCScreen : String;      

{$endif}
{$ifndef XtCScrollProc}

    { was #define dname def_expr }
    function XtCScrollProc : String;      

{$endif}
{$ifndef XtCScrollDCursor}

    { was #define dname def_expr }
    function XtCScrollDCursor : String;      

{$endif}
{$ifndef XtCScrollHCursor}

    { was #define dname def_expr }
    function XtCScrollHCursor : String;      

{$endif}
{$ifndef XtCScrollLCursor}

    { was #define dname def_expr }
    function XtCScrollLCursor : String;      

{$endif}
{$ifndef XtCScrollRCursor}

    { was #define dname def_expr }
    function XtCScrollRCursor : String;      

{$endif}
{$ifndef XtCScrollUCursor}

    { was #define dname def_expr }
    function XtCScrollUCursor : String;      

{$endif}
{$ifndef XtCScrollVCursor}

    { was #define dname def_expr }
    function XtCScrollVCursor : String;      

{$endif}
{$ifndef XtCSelection}

    { was #define dname def_expr }
    function XtCSelection : String;      

{$endif}
{$ifndef XtCSensitive}

    { was #define dname def_expr }
    function XtCSensitive : String;      

{$endif}
{$ifndef XtCSelectionArray}

    { was #define dname def_expr }
    function XtCSelectionArray : String;      

{$endif}
{$ifndef XtCSpace}

    { was #define dname def_expr }
    function XtCSpace : String;      

{$endif}
{$ifndef XtCString}

    { was #define dname def_expr }
    function XtCString : String;      

{$endif}
{$ifndef XtCTextOptions}

    { was #define dname def_expr }
    function XtCTextOptions : String;      

{$endif}
{$ifndef XtCTextPosition}

    { was #define dname def_expr }
    function XtCTextPosition : String;      

{$endif}
{$ifndef XtCTextSink}

    { was #define dname def_expr }
    function XtCTextSink : String;      

{$endif}
{$ifndef XtCTextSource}

    { was #define dname def_expr }
    function XtCTextSource : String;      

{$endif}
{$ifndef XtCThickness}

    { was #define dname def_expr }
    function XtCThickness : String;      

{$endif}
{$ifndef XtCThumb}

    { was #define dname def_expr }
    function XtCThumb : String;      

{$endif}
{$ifndef XtCTranslations}

    { was #define dname def_expr }
    function XtCTranslations : String;      

{$endif}
{$ifndef XtCValue}

    { was #define dname def_expr }
    function XtCValue : String;      

{$endif}
{$ifndef XtCVSpace}

    { was #define dname def_expr }
    function XtCVSpace : String;      

{$endif}
{$ifndef XtCWidth}

    { was #define dname def_expr }
    function XtCWidth : String;      

{$endif}
{$ifndef XtCWindow}

    { was #define dname def_expr }
    function XtCWindow : String;      

{$endif}
{$ifndef XtCX}

    { was #define dname def_expr }
    function XtCX : String;      

{$endif}
{$ifndef XtCY}

    { was #define dname def_expr }
    function XtCY : String;      

{$endif}
{$ifndef XtRAcceleratorTable}

    { was #define dname def_expr }
    function XtRAcceleratorTable : String;      

{$endif}
{$ifndef XtRAtom}

    { was #define dname def_expr }
    function XtRAtom : String;      

{$endif}
{$ifndef XtRBitmap}

    { was #define dname def_expr }
    function XtRBitmap : String;      

{$endif}
{$ifndef XtRBool}

    { was #define dname def_expr }
    function XtRBool : String;      

{$endif}
{$ifndef XtRBoolean}

    { was #define dname def_expr }
    function XtRBoolean : String;      

{$endif}
{$ifndef XtRCallback}

    { was #define dname def_expr }
    function XtRCallback : String;      

{$endif}
{$ifndef XtRCallProc}

    { was #define dname def_expr }
    function XtRCallProc : String;      

{$endif}
{$ifndef XtRCardinal}

    { was #define dname def_expr }
    function XtRCardinal : String;      

{$endif}
{$ifndef XtRColor}

    { was #define dname def_expr }
    function XtRColor : String;      

{$endif}
{$ifndef XtRColormap}

    { was #define dname def_expr }
    function XtRColormap : String;      

{$endif}
{$ifndef XtRCursor}

    { was #define dname def_expr }
    function XtRCursor : String;      

{$endif}
{$ifndef XtRDimension}

    { was #define dname def_expr }
    function XtRDimension : String;      

{$endif}
{$ifndef XtRDisplay}

    { was #define dname def_expr }
    function XtRDisplay : String;      

{$endif}
{$ifndef XtREditMode}

    { was #define dname def_expr }
    function XtREditMode : String;      

{$endif}
{$ifndef XtREnum}

    { was #define dname def_expr }
    function XtREnum : String;      

{$endif}
{$ifndef XtRFile}

    { was #define dname def_expr }
    function XtRFile : String;      

{$endif}
{$ifndef XtRFloat}

    { was #define dname def_expr }
    function XtRFloat : String;      

{$endif}
{$ifndef XtRFont}

    { was #define dname def_expr }
    function XtRFont : String;      

{$endif}
{$ifndef XtRFontStruct}

    { was #define dname def_expr }
    function XtRFontStruct : String;      

{$endif}
{$ifndef XtRFunction}

    { was #define dname def_expr }
    function XtRFunction : String;      

{$endif}
{$ifndef XtRGeometry}

    { was #define dname def_expr }
    function XtRGeometry : String;      

{$endif}
{$ifndef XtRImmediate}

    { was #define dname def_expr }
    function XtRImmediate : String;      

{$endif}
{$ifndef XtRInitialState}

    { was #define dname def_expr }
    function XtRInitialState : String;      

{$endif}
{$ifndef XtRInt}

    { was #define dname def_expr }
    function XtRInt : String;      

{$endif}
{$ifndef XtRJustify}

    { was #define dname def_expr }
    function XtRJustify : String;      

{$endif}
{$ifndef XtRLongBoolean}

    { was #define dname def_expr }
    function XtRLongBoolean : String;      

{$endif}
{$ifndef XtRObject}

    { was #define dname def_expr }
    function XtRObject : String;      

{$endif}
{$ifndef XtROrientation}

    { was #define dname def_expr }
    function XtROrientation : String;      

{$endif}
{$ifndef XtRPixel}

    { was #define dname def_expr }
    function XtRPixel : String;      

{$endif}
{$ifndef XtRPixmap}

    { was #define dname def_expr }
    function XtRPixmap : String;      

{$endif}
{$ifndef XtRPointer}

    { was #define dname def_expr }
    function XtRPointer : String;      

{$endif}
{$ifndef XtRPosition}

    { was #define dname def_expr }
    function XtRPosition : String;      

{$endif}
{$ifndef XtRScreen}

    { was #define dname def_expr }
    function XtRScreen : String;      

{$endif}
{$ifndef XtRShort}

    { was #define dname def_expr }
    function XtRShort : String;      

{$endif}
{$ifndef XtRString}

    { was #define dname def_expr }
    function XtRString : String;      

{$endif}
{$ifndef XtRStringArray}

    { was #define dname def_expr }
    function XtRStringArray : String;      

{$endif}
{$ifndef XtRStringTable}

    { was #define dname def_expr }
    function XtRStringTable : String;      

{$endif}
{$ifndef XtRUnsignedChar}

    { was #define dname def_expr }
    function XtRUnsignedChar : String;      

{$endif}
{$ifndef XtRTranslationTable}

    { was #define dname def_expr }
    function XtRTranslationTable : String;      

{$endif}
{$ifndef XtRVisual}

    { was #define dname def_expr }
    function XtRVisual : String;      

{$endif}
{$ifndef XtRWidget}

    { was #define dname def_expr }
    function XtRWidget : String;      

{$endif}
{$ifndef XtRWidgetClass}

    { was #define dname def_expr }
    function XtRWidgetClass : String;      

{$endif}
{$ifndef XtRWidgetList}

    { was #define dname def_expr }
    function XtRWidgetList : String;      

{$endif}
{$ifndef XtRWindow}

    { was #define dname def_expr }
    function XtRWindow : String;      

{$endif}
{$ifndef XtEoff}

    { was #define dname def_expr }
    function XtEoff : String;      

{$endif}
{$ifndef XtEfalse}

    { was #define dname def_expr }
    function XtEfalse : String;      

{$endif}
{$ifndef XtEno}

    { was #define dname def_expr }
    function XtEno : String;      

{$endif}
{$ifndef XtEon}

    { was #define dname def_expr }
    function XtEon : String;      

{$endif}
{$ifndef XtEtrue}

    { was #define dname def_expr }
    function XtEtrue : String;      

{$endif}
{$ifndef XtEyes}

    { was #define dname def_expr }
    function XtEyes : String;      

{$endif}
{$ifndef XtEvertical}

    { was #define dname def_expr }
    function XtEvertical : String;      

{$endif}
{$ifndef XtEhorizontal}

    { was #define dname def_expr }
    function XtEhorizontal : String;      

{$endif}
{$ifndef XtEtextRead}

    { was #define dname def_expr }
    function XtEtextRead : String;      

{$endif}
{$ifndef XtEtextAppend}

    { was #define dname def_expr }
    function XtEtextAppend : String;      

{$endif}
{$ifndef XtEtextEdit}

    { was #define dname def_expr }
    function XtEtextEdit : String;      

{$endif}
{$ifndef XtExtdefaultbackground}

    { was #define dname def_expr }
    function XtExtdefaultbackground : String;      

{$endif}
{$ifndef XtExtdefaultforeground}

    { was #define dname def_expr }
    function XtExtdefaultforeground : String;      

{$endif}
{$ifndef XtExtdefaultfont}

    { was #define dname def_expr }
    function XtExtdefaultfont : String;      

{$endif}
{$ifndef XtNfontSet}

    { was #define dname def_expr }
    function XtNfontSet : String;      

{$endif}
{$ifndef XtRFontSet}

    { was #define dname def_expr }
    function XtRFontSet : String;      

{$endif}
{$ifndef XtCFontSet}

    { was #define dname def_expr }
    function XtCFontSet : String;      

{$endif}
{$ifndef XtRGravity}

    { was #define dname def_expr }
    function XtRGravity : String;      

{$endif}
{$ifndef XtNcreateHook}

    { was #define dname def_expr }
    function XtNcreateHook : String;      

{$endif}
{$ifndef XtNchangeHook}

    { was #define dname def_expr }
    function XtNchangeHook : String;      

{$endif}
{$ifndef XtNconfigureHook}

    { was #define dname def_expr }
    function XtNconfigureHook : String;      

{$endif}
{$ifndef XtNgeometryHook}

    { was #define dname def_expr }
    function XtNgeometryHook : String;      

{$endif}
{$ifndef XtNdestroyHook}

    { was #define dname def_expr }
    function XtNdestroyHook : String;      

{$endif}
{$ifndef XtNshells}

    { was #define dname def_expr }
    function XtNshells : String;      

{$endif}
{$ifndef XtNnumShells}

    { was #define dname def_expr }
    function XtNnumShells : String;      

{$endif}
{$ifndef XtRCommandArgArray}

    { was #define dname def_expr }
    function XtRCommandArgArray : String;      

{$endif}
{$ifndef XtRDirectoryString}

    { was #define dname def_expr }
    function XtRDirectoryString : String;      

{$endif}
{$ifndef XtREnvironmentArray}

    { was #define dname def_expr }
    function XtREnvironmentArray : String;      

{$endif}
{$ifndef XtRRestartStyle}

    { was #define dname def_expr }
    function XtRRestartStyle : String;      

{$endif}
{$ifndef XtRSmcConn}

    { was #define dname def_expr }
    function XtRSmcConn : String;      

{$endif}
{$ifndef XtHcreate}

    { was #define dname def_expr }
    function XtHcreate : String;      

{$endif}
{$ifndef XtHsetValues}

    { was #define dname def_expr }
    function XtHsetValues : String;      

{$endif}
{$ifndef XtHmanageChildren}

    { was #define dname def_expr }
    function XtHmanageChildren : String;      

{$endif}
{$ifndef XtHunmanageChildren}

    { was #define dname def_expr }
    function XtHunmanageChildren : String;      

{$endif}
{$ifndef XtHmanageSet}

    { was #define dname def_expr }
    function XtHmanageSet : String;      

{$endif}
{$ifndef XtHunmanageSet}

    { was #define dname def_expr }
    function XtHunmanageSet : String;      

{$endif}
{$ifndef XtHrealizeWidget}

    { was #define dname def_expr }
    function XtHrealizeWidget : String;      

{$endif}
{$ifndef XtHunrealizeWidget}

    { was #define dname def_expr }
    function XtHunrealizeWidget : String;      

{$endif}
{$ifndef XtHaddCallback}

    { was #define dname def_expr }
    function XtHaddCallback : String;      

{$endif}
{$ifndef XtHaddCallbacks}

    { was #define dname def_expr }
    function XtHaddCallbacks : String;      

{$endif}
{$ifndef XtHremoveCallback}

    { was #define dname def_expr }
    function XtHremoveCallback : String;      

{$endif}
{$ifndef XtHremoveCallbacks}

    { was #define dname def_expr }
    function XtHremoveCallbacks : String;      

{$endif}
{$ifndef XtHremoveAllCallbacks}

    { was #define dname def_expr }
    function XtHremoveAllCallbacks : String;      

{$endif}
{$ifndef XtHaugmentTranslations}

    { was #define dname def_expr }
    function XtHaugmentTranslations : String;      

{$endif}
{$ifndef XtHoverrideTranslations}

    { was #define dname def_expr }
    function XtHoverrideTranslations : String;      

{$endif}
{$ifndef XtHuninstallTranslations}

    { was #define dname def_expr }
    function XtHuninstallTranslations : String;      

{$endif}
{$ifndef XtHsetKeyboardFocus}

    { was #define dname def_expr }
    function XtHsetKeyboardFocus : String;      

{$endif}
{$ifndef XtHsetWMColormapWindows}

    { was #define dname def_expr }
    function XtHsetWMColormapWindows : String;      

{$endif}
{$ifndef XtHsetMappedWhenManaged}

    { was #define dname def_expr }
    function XtHsetMappedWhenManaged : String;      

{$endif}
{$ifndef XtHmapWidget}

    { was #define dname def_expr }
    function XtHmapWidget : String;      

{$endif}
{$ifndef XtHunmapWidget}

    { was #define dname def_expr }
    function XtHunmapWidget : String;      

{$endif}
{$ifndef XtHpopup}

    { was #define dname def_expr }
    function XtHpopup : String;      

{$endif}
{$ifndef XtHpopupSpringLoaded}

    { was #define dname def_expr }
    function XtHpopupSpringLoaded : String;      

{$endif}
{$ifndef XtHpopdown}

    { was #define dname def_expr }
    function XtHpopdown : String;      

{$endif}
{$ifndef XtHconfigure}

    { was #define dname def_expr }
    function XtHconfigure : String;      

{$endif}
{$ifndef XtHpreGeometry}

    { was #define dname def_expr }
    function XtHpreGeometry : String;      

{$endif}
{$ifndef XtHpostGeometry}

    { was #define dname def_expr }
    function XtHpostGeometry : String;      

{$endif}
{$ifndef XtHdestroy}

    { was #define dname def_expr }
    function XtHdestroy : String;      

{$endif}
{$endif}
    { XTSTRINGDEFINES  }
{$ifndef XTSTRINGDEFINES}
{$undef _XtStringDefs_h_Const}
{$endif}
{$endif}
    { _XtStringDefs_h_  }

implementation

    { was #define dname def_expr }
    function XtNaccelerators : String;
      begin
        XtNaccelerators:=String(@(XtStrings[0]));
      end;

    { was #define dname def_expr }
    function XtNallowHoriz : String;
      begin
        XtNallowHoriz:=String(@(XtStrings[13]));
      end;

    { was #define dname def_expr }
    function XtNallowVert : String;
      begin
        XtNallowVert:=String(@(XtStrings[24]));
      end;

    { was #define dname def_expr }
    function XtNancestorSensitive : String;
      begin
        XtNancestorSensitive:=String(@(XtStrings[34]));
      end;

    { was #define dname def_expr }
    function XtNbackground : String;
      begin
        XtNbackground:=String(@(XtStrings[52]));
      end;

    { was #define dname def_expr }
    function XtNbackgroundPixmap : String;
      begin
        XtNbackgroundPixmap:=String(@(XtStrings[63]));
      end;

    { was #define dname def_expr }
    function XtNbitmap : String;
      begin
        XtNbitmap:=String(@(XtStrings[80]));
      end;

    { was #define dname def_expr }
    function XtNborderColor : String;
      begin
        XtNborderColor:=String(@(XtStrings[87]));
      end;

    { was #define dname def_expr }
    function XtNborder : String;
      begin
        XtNborder:=String(@(XtStrings[99]));
      end;

    { was #define dname def_expr }
    function XtNborderPixmap : String;
      begin
        XtNborderPixmap:=String(@(XtStrings[111]));
      end;

    { was #define dname def_expr }
    function XtNborderWidth : String;
      begin
        XtNborderWidth:=String(@(XtStrings[124]));
      end;

    { was #define dname def_expr }
    function XtNcallback : String;
      begin
        XtNcallback:=String(@(XtStrings[136]));
      end;

    { was #define dname def_expr }
    function XtNchildren : String;
      begin
        XtNchildren:=String(@(XtStrings[145]));
      end;

    { was #define dname def_expr }
    function XtNcolormap : String;
      begin
        XtNcolormap:=String(@(XtStrings[154]));
      end;

    { was #define dname def_expr }
    function XtNdepth : String;
      begin
        XtNdepth:=String(@(XtStrings[163]));
      end;

    { was #define dname def_expr }
    function XtNdestroyCallback : String;
      begin
        XtNdestroyCallback:=String(@(XtStrings[169]));
      end;

    { was #define dname def_expr }
    function XtNeditType : String;
      begin
        XtNeditType:=String(@(XtStrings[185]));
      end;

    { was #define dname def_expr }
    function XtNfile : String;
      begin
        XtNfile:=String(@(XtStrings[194]));
      end;

    { was #define dname def_expr }
    function XtNfont : String;
      begin
        XtNfont:=String(@(XtStrings[199]));
      end;

    { was #define dname def_expr }
    function XtNforceBars : String;
      begin
        XtNforceBars:=String(@(XtStrings[204]));
      end;

    { was #define dname def_expr }
    function XtNforeground : String;
      begin
        XtNforeground:=String(@(XtStrings[214]));
      end;

    { was #define dname def_expr }
    function XtNfunction : String;
      begin
        XtNfunction:=String(@(XtStrings[225]));
      end;

    { was #define dname def_expr }
    function XtNheight : String;
      begin
        XtNheight:=String(@(XtStrings[234]));
      end;

    { was #define dname def_expr }
    function XtNhighlight : String;
      begin
        XtNhighlight:=String(@(XtStrings[241]));
      end;

    { was #define dname def_expr }
    function XtNhSpace : String;
      begin
        XtNhSpace:=String(@(XtStrings[251]));
      end;

    { was #define dname def_expr }
    function XtNindex : String;
      begin
        XtNindex:=String(@(XtStrings[258]));
      end;

    { was #define dname def_expr }
    function XtNinitialResourcesPersistent : String;
      begin
        XtNinitialResourcesPersistent:=String(@(XtStrings[264]));
      end;

    { was #define dname def_expr }
    function XtNinnerHeight : String;
      begin
        XtNinnerHeight:=String(@(XtStrings[291]));
      end;

    { was #define dname def_expr }
    function XtNinnerWidth : String;
      begin
        XtNinnerWidth:=String(@(XtStrings[303]));
      end;

    { was #define dname def_expr }
    function XtNinnerWindow : String;
      begin
        XtNinnerWindow:=String(@(XtStrings[314]));
      end;

    { was #define dname def_expr }
    function XtNinsertPosition : String;
      begin
        XtNinsertPosition:=String(@(XtStrings[326]));
      end;

    { was #define dname def_expr }
    function XtNinternalHeight : String;
      begin
        XtNinternalHeight:=String(@(XtStrings[341]));
      end;

    { was #define dname def_expr }
    function XtNinternalWidth : String;
      begin
        XtNinternalWidth:=String(@(XtStrings[356]));
      end;

    { was #define dname def_expr }
    function XtNjumpProc : String;
      begin
        XtNjumpProc:=String(@(XtStrings[370]));
      end;

    { was #define dname def_expr }
    function XtNjustify : String;
      begin
        XtNjustify:=String(@(XtStrings[379]));
      end;

    { was #define dname def_expr }
    function XtNknobHeight : String;
      begin
        XtNknobHeight:=String(@(XtStrings[387]));
      end;

    { was #define dname def_expr }
    function XtNknobIndent : String;
      begin
        XtNknobIndent:=String(@(XtStrings[398]));
      end;

    { was #define dname def_expr }
    function XtNknobPixel : String;
      begin
        XtNknobPixel:=String(@(XtStrings[409]));
      end;

    { was #define dname def_expr }
    function XtNknobWidth : String;
      begin
        XtNknobWidth:=String(@(XtStrings[419]));
      end;

    { was #define dname def_expr }
    function XtNlabel : String;
      begin
        XtNlabel:=String(@(XtStrings[429]));
      end;

    { was #define dname def_expr }
    function XtNlength : String;
      begin
        XtNlength:=String(@(XtStrings[435]));
      end;

    { was #define dname def_expr }
    function XtNlowerRight : String;
      begin
        XtNlowerRight:=String(@(XtStrings[442]));
      end;

    { was #define dname def_expr }
    function XtNmappedWhenManaged : String;
      begin
        XtNmappedWhenManaged:=String(@(XtStrings[453]));
      end;

    { was #define dname def_expr }
    function XtNmenuEntry : String;
      begin
        XtNmenuEntry:=String(@(XtStrings[471]));
      end;

    { was #define dname def_expr }
    function XtNname : String;
      begin
        XtNname:=String(@(XtStrings[481]));
      end;

    { was #define dname def_expr }
    function XtNnotify : String;
      begin
        XtNnotify:=String(@(XtStrings[486]));
      end;

    { was #define dname def_expr }
    function XtNnumChildren : String;
      begin
        XtNnumChildren:=String(@(XtStrings[493]));
      end;

    { was #define dname def_expr }
    function XtNorientation : String;
      begin
        XtNorientation:=String(@(XtStrings[505]));
      end;

    { was #define dname def_expr }
    function XtNparameter : String;
      begin
        XtNparameter:=String(@(XtStrings[517]));
      end;

    { was #define dname def_expr }
    function XtNpixmap : String;
      begin
        XtNpixmap:=String(@(XtStrings[527]));
      end;

    { was #define dname def_expr }
    function XtNpopupCallback : String;
      begin
        XtNpopupCallback:=String(@(XtStrings[534]));
      end;

    { was #define dname def_expr }
    function XtNpopdownCallback : String;
      begin
        XtNpopdownCallback:=String(@(XtStrings[548]));
      end;

    { was #define dname def_expr }
    function XtNresize : String;
      begin
        XtNresize:=String(@(XtStrings[564]));
      end;

    { was #define dname def_expr }
    function XtNreverseVideo : String;
      begin
        XtNreverseVideo:=String(@(XtStrings[571]));
      end;

    { was #define dname def_expr }
    function XtNscreen : String;
      begin
        XtNscreen:=String(@(XtStrings[584]));
      end;

    { was #define dname def_expr }
    function XtNscrollProc : String;
      begin
        XtNscrollProc:=String(@(XtStrings[591]));
      end;

    { was #define dname def_expr }
    function XtNscrollDCursor : String;
      begin
        XtNscrollDCursor:=String(@(XtStrings[602]));
      end;

    { was #define dname def_expr }
    function XtNscrollHCursor : String;
      begin
        XtNscrollHCursor:=String(@(XtStrings[616]));
      end;

    { was #define dname def_expr }
    function XtNscrollLCursor : String;
      begin
        XtNscrollLCursor:=String(@(XtStrings[630]));
      end;

    { was #define dname def_expr }
    function XtNscrollRCursor : String;
      begin
        XtNscrollRCursor:=String(@(XtStrings[644]));
      end;

    { was #define dname def_expr }
    function XtNscrollUCursor : String;
      begin
        XtNscrollUCursor:=String(@(XtStrings[658]));
      end;

    { was #define dname def_expr }
    function XtNscrollVCursor : String;
      begin
        XtNscrollVCursor:=String(@(XtStrings[672]));
      end;

    { was #define dname def_expr }
    function XtNselection : String;
      begin
        XtNselection:=String(@(XtStrings[686]));
      end;

    { was #define dname def_expr }
    function XtNselectionArray : String;
      begin
        XtNselectionArray:=String(@(XtStrings[696]));
      end;

    { was #define dname def_expr }
    function XtNsensitive : String;
      begin
        XtNsensitive:=String(@(XtStrings[711]));
      end;

    { was #define dname def_expr }
    function XtNshown : String;
      begin
        XtNshown:=String(@(XtStrings[721]));
      end;

    { was #define dname def_expr }
    function XtNspace : String;
      begin
        XtNspace:=String(@(XtStrings[727]));
      end;

    { was #define dname def_expr }
    function XtNstring : String;
      begin
        XtNstring:=String(@(XtStrings[733]));
      end;

    { was #define dname def_expr }
    function XtNtextOptions : String;
      begin
        XtNtextOptions:=String(@(XtStrings[740]));
      end;

    { was #define dname def_expr }
    function XtNtextSink : String;
      begin
        XtNtextSink:=String(@(XtStrings[752]));
      end;

    { was #define dname def_expr }
    function XtNtextSource : String;
      begin
        XtNtextSource:=String(@(XtStrings[761]));
      end;

    { was #define dname def_expr }
    function XtNthickness : String;
      begin
        XtNthickness:=String(@(XtStrings[772]));
      end;

    { was #define dname def_expr }
    function XtNthumb : String;
      begin
        XtNthumb:=String(@(XtStrings[782]));
      end;

    { was #define dname def_expr }
    function XtNthumbProc : String;
      begin
        XtNthumbProc:=String(@(XtStrings[788]));
      end;

    { was #define dname def_expr }
    function XtNtop : String;
      begin
        XtNtop:=String(@(XtStrings[798]));
      end;

    { was #define dname def_expr }
    function XtNtranslations : String;
      begin
        XtNtranslations:=String(@(XtStrings[802]));
      end;

    { was #define dname def_expr }
    function XtNunrealizeCallback : String;
      begin
        XtNunrealizeCallback:=String(@(XtStrings[815]));
      end;

    { was #define dname def_expr }
    function XtNupdate : String;
      begin
        XtNupdate:=String(@(XtStrings[833]));
      end;

    { was #define dname def_expr }
    function XtNuseBottom : String;
      begin
        XtNuseBottom:=String(@(XtStrings[840]));
      end;

    { was #define dname def_expr }
    function XtNuseRight : String;
      begin
        XtNuseRight:=String(@(XtStrings[850]));
      end;

    { was #define dname def_expr }
    function XtNvalue : String;
      begin
        XtNvalue:=String(@(XtStrings[859]));
      end;

    { was #define dname def_expr }
    function XtNvSpace : String;
      begin
        XtNvSpace:=String(@(XtStrings[865]));
      end;

    { was #define dname def_expr }
    function XtNwidth : String;
      begin
        XtNwidth:=String(@(XtStrings[872]));
      end;

    { was #define dname def_expr }
    function XtNwindow : String;
      begin
        XtNwindow:=String(@(XtStrings[878]));
      end;

    { was #define dname def_expr }
    function XtNx : String;
      begin
        XtNx:=String(@(XtStrings[885]));
      end;

    { was #define dname def_expr }
    function XtNy : String;
      begin
        XtNy:=String(@(XtStrings[887]));
      end;

    { was #define dname def_expr }
    function XtCAccelerators : String;
      begin
        XtCAccelerators:=String(@(XtStrings[889]));
      end;

    { was #define dname def_expr }
    function XtCBackground : String;
      begin
        XtCBackground:=String(@(XtStrings[902]));
      end;

    { was #define dname def_expr }
    function XtCBitmap : String;
      begin
        XtCBitmap:=String(@(XtStrings[913]));
      end;

    { was #define dname def_expr }
    function XtCBoolean : String;
      begin
        XtCBoolean:=String(@(XtStrings[920]));
      end;

    { was #define dname def_expr }
    function XtCBorderColor : String;
      begin
        XtCBorderColor:=String(@(XtStrings[928]));
      end;

    { was #define dname def_expr }
    function XtCBorderWidth : String;
      begin
        XtCBorderWidth:=String(@(XtStrings[940]));
      end;

    { was #define dname def_expr }
    function XtCCallback : String;
      begin
        XtCCallback:=String(@(XtStrings[952]));
      end;

    { was #define dname def_expr }
    function XtCColormap : String;
      begin
        XtCColormap:=String(@(XtStrings[961]));
      end;

    { was #define dname def_expr }
    function XtCColor : String;
      begin
        XtCColor:=String(@(XtStrings[970]));
      end;

    { was #define dname def_expr }
    function XtCCursor : String;
      begin
        XtCCursor:=String(@(XtStrings[976]));
      end;

    { was #define dname def_expr }
    function XtCDepth : String;
      begin
        XtCDepth:=String(@(XtStrings[983]));
      end;

    { was #define dname def_expr }
    function XtCEditType : String;
      begin
        XtCEditType:=String(@(XtStrings[989]));
      end;

    { was #define dname def_expr }
    function XtCEventBindings : String;
      begin
        XtCEventBindings:=String(@(XtStrings[998]));
      end;

    { was #define dname def_expr }
    function XtCFile : String;
      begin
        XtCFile:=String(@(XtStrings[1012]));
      end;

    { was #define dname def_expr }
    function XtCFont : String;
      begin
        XtCFont:=String(@(XtStrings[1017]));
      end;

    { was #define dname def_expr }
    function XtCForeground : String;
      begin
        XtCForeground:=String(@(XtStrings[1022]));
      end;

    { was #define dname def_expr }
    function XtCFraction : String;
      begin
        XtCFraction:=String(@(XtStrings[1033]));
      end;

    { was #define dname def_expr }
    function XtCFunction : String;
      begin
        XtCFunction:=String(@(XtStrings[1042]));
      end;

    { was #define dname def_expr }
    function XtCHeight : String;
      begin
        XtCHeight:=String(@(XtStrings[1051]));
      end;

    { was #define dname def_expr }
    function XtCHSpace : String;
      begin
        XtCHSpace:=String(@(XtStrings[1058]));
      end;

    { was #define dname def_expr }
    function XtCIndex : String;
      begin
        XtCIndex:=String(@(XtStrings[1065]));
      end;

    { was #define dname def_expr }
    function XtCInitialResourcesPersistent : String;
      begin
        XtCInitialResourcesPersistent:=String(@(XtStrings[1071]));
      end;

    { was #define dname def_expr }
    function XtCInsertPosition : String;
      begin
        XtCInsertPosition:=String(@(XtStrings[1098]));
      end;

    { was #define dname def_expr }
    function XtCInterval : String;
      begin
        XtCInterval:=String(@(XtStrings[1113]));
      end;

    { was #define dname def_expr }
    function XtCJustify : String;
      begin
        XtCJustify:=String(@(XtStrings[1122]));
      end;

    { was #define dname def_expr }
    function XtCKnobIndent : String;
      begin
        XtCKnobIndent:=String(@(XtStrings[1130]));
      end;

    { was #define dname def_expr }
    function XtCKnobPixel : String;
      begin
        XtCKnobPixel:=String(@(XtStrings[1141]));
      end;

    { was #define dname def_expr }
    function XtCLabel : String;
      begin
        XtCLabel:=String(@(XtStrings[1151]));
      end;

    { was #define dname def_expr }
    function XtCLength : String;
      begin
        XtCLength:=String(@(XtStrings[1157]));
      end;

    { was #define dname def_expr }
    function XtCMappedWhenManaged : String;
      begin
        XtCMappedWhenManaged:=String(@(XtStrings[1164]));
      end;

    { was #define dname def_expr }
    function XtCMargin : String;
      begin
        XtCMargin:=String(@(XtStrings[1182]));
      end;

    { was #define dname def_expr }
    function XtCMenuEntry : String;
      begin
        XtCMenuEntry:=String(@(XtStrings[1189]));
      end;

    { was #define dname def_expr }
    function XtCNotify : String;
      begin
        XtCNotify:=String(@(XtStrings[1199]));
      end;

    { was #define dname def_expr }
    function XtCOrientation : String;
      begin
        XtCOrientation:=String(@(XtStrings[1206]));
      end;

    { was #define dname def_expr }
    function XtCParameter : String;
      begin
        XtCParameter:=String(@(XtStrings[1218]));
      end;

    { was #define dname def_expr }
    function XtCPixmap : String;
      begin
        XtCPixmap:=String(@(XtStrings[1228]));
      end;

    { was #define dname def_expr }
    function XtCPosition : String;
      begin
        XtCPosition:=String(@(XtStrings[1235]));
      end;

    { was #define dname def_expr }
    function XtCReadOnly : String;
      begin
        XtCReadOnly:=String(@(XtStrings[1244]));
      end;

    { was #define dname def_expr }
    function XtCResize : String;
      begin
        XtCResize:=String(@(XtStrings[1253]));
      end;

    { was #define dname def_expr }
    function XtCReverseVideo : String;
      begin
        XtCReverseVideo:=String(@(XtStrings[1260]));
      end;

    { was #define dname def_expr }
    function XtCScreen : String;
      begin
        XtCScreen:=String(@(XtStrings[1273]));
      end;

    { was #define dname def_expr }
    function XtCScrollProc : String;
      begin
        XtCScrollProc:=String(@(XtStrings[1280]));
      end;

    { was #define dname def_expr }
    function XtCScrollDCursor : String;
      begin
        XtCScrollDCursor:=String(@(XtStrings[1291]));
      end;

    { was #define dname def_expr }
    function XtCScrollHCursor : String;
      begin
        XtCScrollHCursor:=String(@(XtStrings[1305]));
      end;

    { was #define dname def_expr }
    function XtCScrollLCursor : String;
      begin
        XtCScrollLCursor:=String(@(XtStrings[1319]));
      end;

    { was #define dname def_expr }
    function XtCScrollRCursor : String;
      begin
        XtCScrollRCursor:=String(@(XtStrings[1333]));
      end;

    { was #define dname def_expr }
    function XtCScrollUCursor : String;
      begin
        XtCScrollUCursor:=String(@(XtStrings[1347]));
      end;

    { was #define dname def_expr }
    function XtCScrollVCursor : String;
      begin
        XtCScrollVCursor:=String(@(XtStrings[1361]));
      end;

    { was #define dname def_expr }
    function XtCSelection : String;
      begin
        XtCSelection:=String(@(XtStrings[1375]));
      end;

    { was #define dname def_expr }
    function XtCSensitive : String;
      begin
        XtCSensitive:=String(@(XtStrings[1385]));
      end;

    { was #define dname def_expr }
    function XtCSelectionArray : String;
      begin
        XtCSelectionArray:=String(@(XtStrings[1395]));
      end;

    { was #define dname def_expr }
    function XtCSpace : String;
      begin
        XtCSpace:=String(@(XtStrings[1410]));
      end;

    { was #define dname def_expr }
    function XtCString : String;
      begin
        XtCString:=String(@(XtStrings[1416]));
      end;

    { was #define dname def_expr }
    function XtCTextOptions : String;
      begin
        XtCTextOptions:=String(@(XtStrings[1423]));
      end;

    { was #define dname def_expr }
    function XtCTextPosition : String;
      begin
        XtCTextPosition:=String(@(XtStrings[1435]));
      end;

    { was #define dname def_expr }
    function XtCTextSink : String;
      begin
        XtCTextSink:=String(@(XtStrings[1448]));
      end;

    { was #define dname def_expr }
    function XtCTextSource : String;
      begin
        XtCTextSource:=String(@(XtStrings[1457]));
      end;

    { was #define dname def_expr }
    function XtCThickness : String;
      begin
        XtCThickness:=String(@(XtStrings[1468]));
      end;

    { was #define dname def_expr }
    function XtCThumb : String;
      begin
        XtCThumb:=String(@(XtStrings[1478]));
      end;

    { was #define dname def_expr }
    function XtCTranslations : String;
      begin
        XtCTranslations:=String(@(XtStrings[1484]));
      end;

    { was #define dname def_expr }
    function XtCValue : String;
      begin
        XtCValue:=String(@(XtStrings[1497]));
      end;

    { was #define dname def_expr }
    function XtCVSpace : String;
      begin
        XtCVSpace:=String(@(XtStrings[1503]));
      end;

    { was #define dname def_expr }
    function XtCWidth : String;
      begin
        XtCWidth:=String(@(XtStrings[1510]));
      end;

    { was #define dname def_expr }
    function XtCWindow : String;
      begin
        XtCWindow:=String(@(XtStrings[1516]));
      end;

    { was #define dname def_expr }
    function XtCX : String;
      begin
        XtCX:=String(@(XtStrings[1523]));
      end;

    { was #define dname def_expr }
    function XtCY : String;
      begin
        XtCY:=String(@(XtStrings[1525]));
      end;

    { was #define dname def_expr }
    function XtRAcceleratorTable : String;
      begin
        XtRAcceleratorTable:=String(@(XtStrings[1527]));
      end;

    { was #define dname def_expr }
    function XtRAtom : String;
      begin
        XtRAtom:=String(@(XtStrings[1544]));
      end;

    { was #define dname def_expr }
    function XtRBitmap : String;
      begin
        XtRBitmap:=String(@(XtStrings[1549]));
      end;

    { was #define dname def_expr }
    function XtRBool : String;
      begin
        XtRBool:=String(@(XtStrings[1556]));
      end;

    { was #define dname def_expr }
    function XtRBoolean : String;
      begin
        XtRBoolean:=String(@(XtStrings[1561]));
      end;

    { was #define dname def_expr }
    function XtRCallback : String;
      begin
        XtRCallback:=String(@(XtStrings[1569]));
      end;

    { was #define dname def_expr }
    function XtRCallProc : String;
      begin
        XtRCallProc:=String(@(XtStrings[1578]));
      end;

    { was #define dname def_expr }
    function XtRCardinal : String;
      begin
        XtRCardinal:=String(@(XtStrings[1587]));
      end;

    { was #define dname def_expr }
    function XtRColor : String;
      begin
        XtRColor:=String(@(XtStrings[1596]));
      end;

    { was #define dname def_expr }
    function XtRColormap : String;
      begin
        XtRColormap:=String(@(XtStrings[1602]));
      end;

    { was #define dname def_expr }
    function XtRCursor : String;
      begin
        XtRCursor:=String(@(XtStrings[1611]));
      end;

    { was #define dname def_expr }
    function XtRDimension : String;
      begin
        XtRDimension:=String(@(XtStrings[1618]));
      end;

    { was #define dname def_expr }
    function XtRDisplay : String;
      begin
        XtRDisplay:=String(@(XtStrings[1628]));
      end;

    { was #define dname def_expr }
    function XtREditMode : String;
      begin
        XtREditMode:=String(@(XtStrings[1636]));
      end;

    { was #define dname def_expr }
    function XtREnum : String;
      begin
        XtREnum:=String(@(XtStrings[1645]));
      end;

    { was #define dname def_expr }
    function XtRFile : String;
      begin
        XtRFile:=String(@(XtStrings[1650]));
      end;

    { was #define dname def_expr }
    function XtRFloat : String;
      begin
        XtRFloat:=String(@(XtStrings[1655]));
      end;

    { was #define dname def_expr }
    function XtRFont : String;
      begin
        XtRFont:=String(@(XtStrings[1661]));
      end;

    { was #define dname def_expr }
    function XtRFontStruct : String;
      begin
        XtRFontStruct:=String(@(XtStrings[1666]));
      end;

    { was #define dname def_expr }
    function XtRFunction : String;
      begin
        XtRFunction:=String(@(XtStrings[1677]));
      end;

    { was #define dname def_expr }
    function XtRGeometry : String;
      begin
        XtRGeometry:=String(@(XtStrings[1686]));
      end;

    { was #define dname def_expr }
    function XtRImmediate : String;
      begin
        XtRImmediate:=String(@(XtStrings[1695]));
      end;

    { was #define dname def_expr }
    function XtRInitialState : String;
      begin
        XtRInitialState:=String(@(XtStrings[1705]));
      end;

    { was #define dname def_expr }
    function XtRInt : String;
      begin
        XtRInt:=String(@(XtStrings[1718]));
      end;

    { was #define dname def_expr }
    function XtRJustify : String;
      begin
        XtRJustify:=String(@(XtStrings[1722]));
      end;

    { was #define dname def_expr }
    function XtRLongBoolean : String;
      begin
        XtRLongBoolean:=String(@(XtStrings[1730]));
      end;

    { was #define dname def_expr }
    function XtRObject : String;
      begin
        XtRObject:=String(@(XtStrings[1735]));
      end;

    { was #define dname def_expr }
    function XtROrientation : String;
      begin
        XtROrientation:=String(@(XtStrings[1742]));
      end;

    { was #define dname def_expr }
    function XtRPixel : String;
      begin
        XtRPixel:=String(@(XtStrings[1754]));
      end;

    { was #define dname def_expr }
    function XtRPixmap : String;
      begin
        XtRPixmap:=String(@(XtStrings[1760]));
      end;

    { was #define dname def_expr }
    function XtRPointer : String;
      begin
        XtRPointer:=String(@(XtStrings[1767]));
      end;

    { was #define dname def_expr }
    function XtRPosition : String;
      begin
        XtRPosition:=String(@(XtStrings[1775]));
      end;

    { was #define dname def_expr }
    function XtRScreen : String;
      begin
        XtRScreen:=String(@(XtStrings[1784]));
      end;

    { was #define dname def_expr }
    function XtRShort : String;
      begin
        XtRShort:=String(@(XtStrings[1791]));
      end;

    { was #define dname def_expr }
    function XtRString : String;
      begin
        XtRString:=String(@(XtStrings[1797]));
      end;

    { was #define dname def_expr }
    function XtRStringArray : String;
      begin
        XtRStringArray:=String(@(XtStrings[1804]));
      end;

    { was #define dname def_expr }
    function XtRStringTable : String;
      begin
        XtRStringTable:=String(@(XtStrings[1816]));
      end;

    { was #define dname def_expr }
    function XtRUnsignedChar : String;
      begin
        XtRUnsignedChar:=String(@(XtStrings[1828]));
      end;

    { was #define dname def_expr }
    function XtRTranslationTable : String;
      begin
        XtRTranslationTable:=String(@(XtStrings[1841]));
      end;

    { was #define dname def_expr }
    function XtRVisual : String;
      begin
        XtRVisual:=String(@(XtStrings[1858]));
      end;

    { was #define dname def_expr }
    function XtRWidget : String;
      begin
        XtRWidget:=String(@(XtStrings[1865]));
      end;

    { was #define dname def_expr }
    function XtRWidgetClass : String;
      begin
        XtRWidgetClass:=String(@(XtStrings[1872]));
      end;

    { was #define dname def_expr }
    function XtRWidgetList : String;
      begin
        XtRWidgetList:=String(@(XtStrings[1884]));
      end;

    { was #define dname def_expr }
    function XtRWindow : String;
      begin
        XtRWindow:=String(@(XtStrings[1895]));
      end;

    { was #define dname def_expr }
    function XtEoff : String;
      begin
        XtEoff:=String(@(XtStrings[1902]));
      end;

    { was #define dname def_expr }
    function XtEfalse : String;
      begin
        XtEfalse:=String(@(XtStrings[1906]));
      end;

    { was #define dname def_expr }
    function XtEno : String;
      begin
        XtEno:=String(@(XtStrings[1912]));
      end;

    { was #define dname def_expr }
    function XtEon : String;
      begin
        XtEon:=String(@(XtStrings[1915]));
      end;

    { was #define dname def_expr }
    function XtEtrue : String;
      begin
        XtEtrue:=String(@(XtStrings[1918]));
      end;

    { was #define dname def_expr }
    function XtEyes : String;
      begin
        XtEyes:=String(@(XtStrings[1923]));
      end;

    { was #define dname def_expr }
    function XtEvertical : String;
      begin
        XtEvertical:=String(@(XtStrings[1927]));
      end;

    { was #define dname def_expr }
    function XtEhorizontal : String;
      begin
        XtEhorizontal:=String(@(XtStrings[1936]));
      end;

    { was #define dname def_expr }
    function XtEtextRead : String;
      begin
        XtEtextRead:=String(@(XtStrings[1947]));
      end;

    { was #define dname def_expr }
    function XtEtextAppend : String;
      begin
        XtEtextAppend:=String(@(XtStrings[1952]));
      end;

    { was #define dname def_expr }
    function XtEtextEdit : String;
      begin
        XtEtextEdit:=String(@(XtStrings[1959]));
      end;

    { was #define dname def_expr }
    function XtExtdefaultbackground : String;
      begin
        XtExtdefaultbackground:=String(@(XtStrings[1964]));
      end;

    { was #define dname def_expr }
    function XtExtdefaultforeground : String;
      begin
        XtExtdefaultforeground:=String(@(XtStrings[1984]));
      end;

    { was #define dname def_expr }
    function XtExtdefaultfont : String;
      begin
        XtExtdefaultfont:=String(@(XtStrings[2004]));
      end;

    { was #define dname def_expr }
    function XtNfontSet : String;
      begin
        XtNfontSet:=String(@(XtStrings[2018]));
      end;

    { was #define dname def_expr }
    function XtRFontSet : String;
      begin
        XtRFontSet:=String(@(XtStrings[2026]));
      end;

    { was #define dname def_expr }
    function XtCFontSet : String;
      begin
        XtCFontSet:=String(@(XtStrings[2034]));
      end;

    { was #define dname def_expr }
    function XtRGravity : String;
      begin
        XtRGravity:=String(@(XtStrings[2042]));
      end;

    { was #define dname def_expr }
    function XtNcreateHook : String;
      begin
        XtNcreateHook:=String(@(XtStrings[2050]));
      end;

    { was #define dname def_expr }
    function XtNchangeHook : String;
      begin
        XtNchangeHook:=String(@(XtStrings[2061]));
      end;

    { was #define dname def_expr }
    function XtNconfigureHook : String;
      begin
        XtNconfigureHook:=String(@(XtStrings[2072]));
      end;

    { was #define dname def_expr }
    function XtNgeometryHook : String;
      begin
        XtNgeometryHook:=String(@(XtStrings[2086]));
      end;

    { was #define dname def_expr }
    function XtNdestroyHook : String;
      begin
        XtNdestroyHook:=String(@(XtStrings[2099]));
      end;

    { was #define dname def_expr }
    function XtNshells : String;
      begin
        XtNshells:=String(@(XtStrings[2111]));
      end;

    { was #define dname def_expr }
    function XtNnumShells : String;
      begin
        XtNnumShells:=String(@(XtStrings[2118]));
      end;

    { was #define dname def_expr }
    function XtRCommandArgArray : String;
      begin
        XtRCommandArgArray:=String(@(XtStrings[2128]));
      end;

    { was #define dname def_expr }
    function XtRDirectoryString : String;
      begin
        XtRDirectoryString:=String(@(XtStrings[2144]));
      end;

    { was #define dname def_expr }
    function XtREnvironmentArray : String;
      begin
        XtREnvironmentArray:=String(@(XtStrings[2160]));
      end;

    { was #define dname def_expr }
    function XtRRestartStyle : String;
      begin
        XtRRestartStyle:=String(@(XtStrings[2177]));
      end;

    { was #define dname def_expr }
    function XtRSmcConn : String;
      begin
        XtRSmcConn:=String(@(XtStrings[2190]));
      end;

    { was #define dname def_expr }
    function XtHcreate : String;
      begin
        XtHcreate:=String(@(XtStrings[2198]));
      end;

    { was #define dname def_expr }
    function XtHsetValues : String;
      begin
        XtHsetValues:=String(@(XtStrings[2207]));
      end;

    { was #define dname def_expr }
    function XtHmanageChildren : String;
      begin
        XtHmanageChildren:=String(@(XtStrings[2219]));
      end;

    { was #define dname def_expr }
    function XtHunmanageChildren : String;
      begin
        XtHunmanageChildren:=String(@(XtStrings[2236]));
      end;

    { was #define dname def_expr }
    function XtHmanageSet : String;
      begin
        XtHmanageSet:=String(@(XtStrings[2255]));
      end;

    { was #define dname def_expr }
    function XtHunmanageSet : String;
      begin
        XtHunmanageSet:=String(@(XtStrings[2267]));
      end;

    { was #define dname def_expr }
    function XtHrealizeWidget : String;
      begin
        XtHrealizeWidget:=String(@(XtStrings[2281]));
      end;

    { was #define dname def_expr }
    function XtHunrealizeWidget : String;
      begin
        XtHunrealizeWidget:=String(@(XtStrings[2297]));
      end;

    { was #define dname def_expr }
    function XtHaddCallback : String;
      begin
        XtHaddCallback:=String(@(XtStrings[2315]));
      end;

    { was #define dname def_expr }
    function XtHaddCallbacks : String;
      begin
        XtHaddCallbacks:=String(@(XtStrings[2329]));
      end;

    { was #define dname def_expr }
    function XtHremoveCallback : String;
      begin
        XtHremoveCallback:=String(@(XtStrings[2344]));
      end;

    { was #define dname def_expr }
    function XtHremoveCallbacks : String;
      begin
        XtHremoveCallbacks:=String(@(XtStrings[2361]));
      end;

    { was #define dname def_expr }
    function XtHremoveAllCallbacks : String;
      begin
        XtHremoveAllCallbacks:=String(@(XtStrings[2379]));
      end;

    { was #define dname def_expr }
    function XtHaugmentTranslations : String;
      begin
        XtHaugmentTranslations:=String(@(XtStrings[2400]));
      end;

    { was #define dname def_expr }
    function XtHoverrideTranslations : String;
      begin
        XtHoverrideTranslations:=String(@(XtStrings[2422]));
      end;

    { was #define dname def_expr }
    function XtHuninstallTranslations : String;
      begin
        XtHuninstallTranslations:=String(@(XtStrings[2445]));
      end;

    { was #define dname def_expr }
    function XtHsetKeyboardFocus : String;
      begin
        XtHsetKeyboardFocus:=String(@(XtStrings[2469]));
      end;

    { was #define dname def_expr }
    function XtHsetWMColormapWindows : String;
      begin
        XtHsetWMColormapWindows:=String(@(XtStrings[2488]));
      end;

    { was #define dname def_expr }
    function XtHsetMappedWhenManaged : String;
      begin
        XtHsetMappedWhenManaged:=String(@(XtStrings[2511]));
      end;

    { was #define dname def_expr }
    function XtHmapWidget : String;
      begin
        XtHmapWidget:=String(@(XtStrings[2534]));
      end;

    { was #define dname def_expr }
    function XtHunmapWidget : String;
      begin
        XtHunmapWidget:=String(@(XtStrings[2546]));
      end;

    { was #define dname def_expr }
    function XtHpopup : String;
      begin
        XtHpopup:=String(@(XtStrings[2560]));
      end;

    { was #define dname def_expr }
    function XtHpopupSpringLoaded : String;
      begin
        XtHpopupSpringLoaded:=String(@(XtStrings[2568]));
      end;

    { was #define dname def_expr }
    function XtHpopdown : String;
      begin
        XtHpopdown:=String(@(XtStrings[2588]));
      end;

    { was #define dname def_expr }
    function XtHconfigure : String;
      begin
        XtHconfigure:=String(@(XtStrings[2598]));
      end;

    { was #define dname def_expr }
    function XtHpreGeometry : String;
      begin
        XtHpreGeometry:=String(@(XtStrings[2610]));
      end;

    { was #define dname def_expr }
    function XtHpostGeometry : String;
      begin
        XtHpostGeometry:=String(@(XtStrings[2624]));
      end;

    { was #define dname def_expr }
    function XtHdestroy : String;
      begin
        XtHdestroy:=String(@(XtStrings[2639]));
      end;


end.
